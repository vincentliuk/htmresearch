%!/usr/bin/env python% ----------------------------------------------------------------------% Numenta Platform for Intelligent Computing (NuPIC)% Copyright (C) 2016, Numenta, Inc.  Unless you have an agreement% with Numenta, Inc., for a separate license for this software code, the% following terms and conditions apply:%% This program is free software: you can redistribute it and/or modify% it under the terms of the GNU Affero Public License version 3 as% published by the Free Software Foundation.%% This program is distributed in the hope that it will be useful,% but WITHOUT ANY WARRANTY; without even the implied warranty of% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.% See the GNU Affero Public License for more details.%% You should have received a copy of the GNU Affero Public License% along with this program.  If not, see http://www.gnu.org/licenses.%% http://numenta.org/licenses/% ----------------------------------------------------------------------function raster( splist, range, color )%% Usage: raster( splist, <range>, <color> )%% appended sequential spike lists - if next spike time% is smaller than previous, new raster% % ns returns the number of spikes in each column%% if 'color' is used, assume plot raster on same figure %% Created 17 Apr 2003 DABif isempty(range)    range(1) = 0;    range(2) = max(splist(:));endif nargin < 3  color = 'b';endif nargin > 1  if length(range) > 1    splist = splist((splist > range(1) & splist < range(2)) | (splist < 0));    if isempty(find(splist > 0))      disp( 'There are no spikes in that time range.')      return    end    if nargin < 3 	    color = 'b';	  end  else    color = range;  endelse  color = 'b';end% if nargin < 3%   figure% endhold on[Nreps rlocs] = repeat_detect( splist );y = 1;nspk = 0;for n = 1:Nreps  for i = rlocs(n,1):rlocs(n,2)    set(line,'XData',[1 1]*splist(i),'YData',[y y+0.78],'Color',color, 'LineWidth', .8)    nspk = nspk + 1;      end  y = y + 1;  endfprintf( '%d rows with %d spikes total.\n', y-1, nspk )hold offif nargin > 1  mint = range(1);  maxt = range(2);else  mint = floor(min(splist((splist > 0)))*4)/4;  if mint < 0    mint = 0;  end   maxt = ceil(max(splist)*4)/4;endaxis([mint maxt 0 (y+1)*1 ])set(gca,'LineWidth',0.6,'FontSize',8)